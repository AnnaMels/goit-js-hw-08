{"version":3,"sources":["../throttle.js","../debounce.js","js/03-feedback.js"],"names":["delay","callback","options","noTrailing","noLeading","debounceMode","undefined","timeoutID","cancelled","lastExec","clearExistingTimeout","clearTimeout","cancel","upcomingOnly","wrapper","arguments_","self","elapsed","Date","now","exec","apply","clear","setTimeout","atBegin","throttle","form","document","querySelector","input","textarea","LOCALSRORAGE_KEY","savedData","localStorage","getItem","parsedData","JSON","parse","addEventListener","onFormInput","onFormSubmit","value","email","message","userData","elements","setItem","stringify","e","preventDefault","console","log","reset","removeItem"],"mappings":"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","file":"03-feedback.abe3eab1.js","sourceRoot":"..","sourcesContent":["/* eslint-disable no-undefined,no-param-reassign,no-shadow */\n\n/**\n * Throttle execution of a function. Especially useful for rate limiting\n * execution of handlers on events like resize and scroll.\n *\n * @param {number} delay -                  A zero-or-greater delay in milliseconds. For event callbacks, values around 100 or 250 (or even higher)\n *                                            are most useful.\n * @param {Function} callback -               A function to be executed after delay milliseconds. The `this` context and all arguments are passed through,\n *                                            as-is, to `callback` when the throttled-function is executed.\n * @param {object} [options] -              An object to configure options.\n * @param {boolean} [options.noTrailing] -   Optional, defaults to false. If noTrailing is true, callback will only execute every `delay` milliseconds\n *                                            while the throttled-function is being called. If noTrailing is false or unspecified, callback will be executed\n *                                            one final time after the last throttled-function call. (After the throttled-function has not been called for\n *                                            `delay` milliseconds, the internal counter is reset).\n * @param {boolean} [options.noLeading] -   Optional, defaults to false. If noLeading is false, the first throttled-function call will execute callback\n *                                            immediately. If noLeading is true, the first the callback execution will be skipped. It should be noted that\n *                                            callback will never executed if both noLeading = true and noTrailing = true.\n * @param {boolean} [options.debounceMode] - If `debounceMode` is true (at begin), schedule `clear` to execute after `delay` ms. If `debounceMode` is\n *                                            false (at end), schedule `callback` to execute after `delay` ms.\n *\n * @returns {Function} A new, throttled, function.\n */\nexport default function (delay, callback, options) {\n\tconst {\n\t\tnoTrailing = false,\n\t\tnoLeading = false,\n\t\tdebounceMode = undefined\n\t} = options || {};\n\t/*\n\t * After wrapper has stopped being called, this timeout ensures that\n\t * `callback` is executed at the proper times in `throttle` and `end`\n\t * debounce modes.\n\t */\n\tlet timeoutID;\n\tlet cancelled = false;\n\n\t// Keep track of the last time `callback` was executed.\n\tlet lastExec = 0;\n\n\t// Function to clear existing timeout\n\tfunction clearExistingTimeout() {\n\t\tif (timeoutID) {\n\t\t\tclearTimeout(timeoutID);\n\t\t}\n\t}\n\n\t// Function to cancel next exec\n\tfunction cancel(options) {\n\t\tconst { upcomingOnly = false } = options || {};\n\t\tclearExistingTimeout();\n\t\tcancelled = !upcomingOnly;\n\t}\n\n\t/*\n\t * The `wrapper` function encapsulates all of the throttling / debouncing\n\t * functionality and when executed will limit the rate at which `callback`\n\t * is executed.\n\t */\n\tfunction wrapper(...arguments_) {\n\t\tlet self = this;\n\t\tlet elapsed = Date.now() - lastExec;\n\n\t\tif (cancelled) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Execute `callback` and update the `lastExec` timestamp.\n\t\tfunction exec() {\n\t\t\tlastExec = Date.now();\n\t\t\tcallback.apply(self, arguments_);\n\t\t}\n\n\t\t/*\n\t\t * If `debounceMode` is true (at begin) this is used to clear the flag\n\t\t * to allow future `callback` executions.\n\t\t */\n\t\tfunction clear() {\n\t\t\ttimeoutID = undefined;\n\t\t}\n\n\t\tif (!noLeading && debounceMode && !timeoutID) {\n\t\t\t/*\n\t\t\t * Since `wrapper` is being called for the first time and\n\t\t\t * `debounceMode` is true (at begin), execute `callback`\n\t\t\t * and noLeading != true.\n\t\t\t */\n\t\t\texec();\n\t\t}\n\n\t\tclearExistingTimeout();\n\n\t\tif (debounceMode === undefined && elapsed > delay) {\n\t\t\tif (noLeading) {\n\t\t\t\t/*\n\t\t\t\t * In throttle mode with noLeading, if `delay` time has\n\t\t\t\t * been exceeded, update `lastExec` and schedule `callback`\n\t\t\t\t * to execute after `delay` ms.\n\t\t\t\t */\n\t\t\t\tlastExec = Date.now();\n\t\t\t\tif (!noTrailing) {\n\t\t\t\t\ttimeoutID = setTimeout(debounceMode ? clear : exec, delay);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t/*\n\t\t\t\t * In throttle mode without noLeading, if `delay` time has been exceeded, execute\n\t\t\t\t * `callback`.\n\t\t\t\t */\n\t\t\t\texec();\n\t\t\t}\n\t\t} else if (noTrailing !== true) {\n\t\t\t/*\n\t\t\t * In trailing throttle mode, since `delay` time has not been\n\t\t\t * exceeded, schedule `callback` to execute `delay` ms after most\n\t\t\t * recent execution.\n\t\t\t *\n\t\t\t * If `debounceMode` is true (at begin), schedule `clear` to execute\n\t\t\t * after `delay` ms.\n\t\t\t *\n\t\t\t * If `debounceMode` is false (at end), schedule `callback` to\n\t\t\t * execute after `delay` ms.\n\t\t\t */\n\t\t\ttimeoutID = setTimeout(\n\t\t\t\tdebounceMode ? clear : exec,\n\t\t\t\tdebounceMode === undefined ? delay - elapsed : delay\n\t\t\t);\n\t\t}\n\t}\n\n\twrapper.cancel = cancel;\n\n\t// Return the wrapper function.\n\treturn wrapper;\n}\n","/* eslint-disable no-undefined */\n\nimport throttle from './throttle.js';\n\n/**\n * Debounce execution of a function. Debouncing, unlike throttling,\n * guarantees that a function is only executed a single time, either at the\n * very beginning of a series of calls, or at the very end.\n *\n * @param {number} delay -               A zero-or-greater delay in milliseconds. For event callbacks, values around 100 or 250 (or even higher) are most useful.\n * @param {Function} callback -          A function to be executed after delay milliseconds. The `this` context and all arguments are passed through, as-is,\n *                                        to `callback` when the debounced-function is executed.\n * @param {object} [options] -           An object to configure options.\n * @param {boolean} [options.atBegin] -  Optional, defaults to false. If atBegin is false or unspecified, callback will only be executed `delay` milliseconds\n *                                        after the last debounced-function call. If atBegin is true, callback will be executed only at the first debounced-function call.\n *                                        (After the throttled-function has not been called for `delay` milliseconds, the internal counter is reset).\n *\n * @returns {Function} A new, debounced function.\n */\nexport default function (delay, callback, options) {\n\tconst { atBegin = false } = options || {};\n\treturn throttle(delay, callback, { debounceMode: atBegin !== false });\n}\n","import { throttle } from 'throttle-debounce';\n\nconst form = document.querySelector('.feedback-form');\nconst input = document.querySelector('input');\nconst textarea = document.querySelector('textarea');\nconst LOCALSRORAGE_KEY = 'feedback-form-state';\nconst savedData = localStorage.getItem(LOCALSRORAGE_KEY); //null\nconst parsedData = JSON.parse(savedData);\n\nform.addEventListener('input', throttle(500, onFormInput));\nform.addEventListener('submit', onFormSubmit);\n\n\nif (parsedData) {\n    input.value = parsedData.email;\n    textarea.value = parsedData.message;\n}\n\nfunction onFormInput () {\n    const userData = {\n        email: form.elements.email.value,\n        message: form.elements.message.value,\n    };\n    localStorage.setItem(LOCALSRORAGE_KEY, JSON.stringify(userData));\n};\n\nfunction onFormSubmit (e) {\n    e.preventDefault();\n    console.log(parsedData);\n    form.reset();\n    localStorage.removeItem(LOCALSRORAGE_KEY);\n}\n\n\n\n"]}